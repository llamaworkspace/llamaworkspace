# When adding additional environment variables, the schema in "/src/env.mjs"
# should be updated accordingly.

NODE_ENV=development

# Postgres Database url
DATABASE_URL=postgresql://postgres:password@localhost:5432/llamaws

# Postgres PgVector Database url
PGVECTOR_DATABASE_URL=postgresql://postgres:password@localhost:5433/llamawsvector

# A unique secret key used for DB encryption and for session management
# Must be generated with one of the following commands:
#   - npm run cloak:generate
ENCRYPTION_KEY=SECRET_MASTER_KEY

# Google OAuth keys, to enable login
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=

# SMTP email provider
# SMTP_EMAIL_SERVER Should look like this: smtp://username:password@smtp.exampledomain.com:port
SMTP_EMAIL_SERVER=
SMTP_EMAIL_FROM=info@exampledomain.com

SENTRY_DEBUG=
SENTRY_DSN=

NEXT_PUBLIC_ENV=development
NEXT_PUBLIC_FRONTEND_URL=http://localhost:3000
NEXT_PUBLIC_TRPC_DEBUG=false

# Non-AWS S3-compatible storage requires an endpoint
S3_ENDPOINT=http://localhost:9000

# S3 bucket for storing files (any S3-compatible storage works. Region is optional.)
S3_ACCESS_KEY_ID=miniouser
S3_SECRET_ACCESS_KEY=miniopassword
S3_REGION=us-east-1
S3_BUCKET_NAME=llamaws

# LlamaQ is a service that queues up tasks to be processed by the backend.
LLAMAQ_ENQUEUE_URL=http://localhost:4000/llamaq/enqueue

# LLAMAQ_ACCESS_KEY is the key that you set in the LlamaQ service to allow incoming requests
LLAMAQ_ACCESS_KEY=llamaq-access-key
# LLAMAQ_INCOMING_API_ROUTE_ACCESS_KEY is the opposite: the key that you must set in LlamaQ to allow incoming requests
LLAMAQ_INCOMING_API_ROUTE_ACCESS_KEY=incoming-api-route-access-key